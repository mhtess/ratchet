// hyperparameters taken from KGL (2007) appendix
var sigma_y = Math.sqrt(0.0025);
var sigma_b = Math.sqrt(0.005);
var mu_0 = 0, mu_1 = 1;

var round = function(x, k){
  return Math.round(x*10)/10
};

var stateVals = map(
  round,
  _.range(-3, 3, 0.1)
);

var stateProbs = {
  b0: map(function(s){
    Math.exp(Gaussian({mu: mu_0, sigma: sigma_b}).score(s));
  }, stateVals),
  b1: map(function(s){
      Math.exp(Gaussian({mu: mu_1, sigma: sigma_b}).score(s));
  }, stateVals)
};

var statePrior = {
  b0: Infer({
    model: function(){
      return categorical({vs: stateVals, ps: stateProbs.b0})
    }}),
  b1: Infer({
    model: function(){
      return categorical({vs: stateVals, ps: stateProbs.b1})
  }})
};

var posteriorPrediction = function(dist, x){
  var params = sample(dist);
  return T.get(params, 0) + T.get(params, 1) * x;
};
